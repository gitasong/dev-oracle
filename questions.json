{ "questions": [{
    "content": "Do programmers have some coding secrets that are only learnt by experience?",
    "author": "newbie1",
    "note": "I want to be a coding ninja."
  }, {
    "content": "Why do programming languages need to be complicated and difficult to learn or even understand, why don’t we make it as simple as normal English?",
    "author": "newbie2",
    "note": "I can't read normal English, either."
  }, {
    "content": "Should I ask my colleagues for help if I stuck on a bug for 2 weeks and can't make any progress?",
    "author": "newbie3",
    "note": "Likes to perseverate."
  }, {
    "content": "Is it possible to learn HTML and CSS in one month?",
    "author": "newbie4",
    "note": "Still stuck on HTML after all these years."
  }],

  "answers": [{
    "content": "I earned my degree at the incredibly old age of 38. After graduation I was interviewed by Amazon and made it through several rounds. They ultimately did not hire me but I was not that far off from getting hired. At the age of 45 I actually turned down an interview with Google. I'm sure that with some study I could get past any algorithm screening they might do and I certainly have the skills to get an entry level job there. So no, it is not true.",
    "author": "Joseph Hopper, I do a little programming from 9 to 5"
  }, {
    "content": "Do NOT choose programming as a career to fall into. In many respects it is the new “typing pool”. Be very concerned if you hear yourself or any peers mumbling “I hate this”.\nIf you like sudoku, crossword puzzles, mastermind, and are well educated, then yes you may fit in. Bear in mind the following:\nIt us likely very few people will ever know your work. Your work is ephemeral. Ask any OS/2 or Visual Basic programmer.\n•You may as well be in prison, long hours every month for years will add up.\n•You will make more money from your wits than from coding.\n•You will become dependent upon caffeine and high GI foods, you will monitor yourself for impairment and keep your IQ as high as possible.\n•Depending upon your employer, you cannot talk about some the great things you have done, ever.\n•Depending pon your employer there may be restrictions upon you owning any number of tech stocks, using a smart phone, leaving town.\n•You may be exploited, be sure working in an “Agile” shop adequately compensates you. I was once on a project where one of my team would have been paid more to wash cars, and said so prior to his departure.\n•.. which brings me to the risk of being short paid. This was a blue chip company with cash flow issues. I understand they had to renege on the bonuses to meet payroll, but really ?\n•You will be “made” as plastic by the rest of us sooner or later, maybe your knowledge of Heinlein or Asimov will trip you up, maybe it will be your academic obsession with Big O notation.\n•You will need to study for the rest of your life. Most of what you learn will be useless in another 100 years. Some of it will be useless by the time you graduate.\nIf you love it, you won’t care. It’s like being paid to do crossword puzzles in a glossy magazine, and people are pretty tolerant.\nI apologise for this being more of a rant than an answer, I have been a programmer for over 30 years now, most of that has been fun, a way to extend my teenage years into an eternity.",
    "author": "Matthew McKenzie, 25 years flogging dead systems."
  }, {
    "content": "There are really only two levels in programming.\n•Level 1: You get shit done.\n•Level 0: You don’t get shit done.\nThere’s so much vanity among software developers. We talk a lot about clean code, style and best practices. We argue ad nauseam over different programming languages, imperative vs. functional, tabs vs. spaces and so on. The truth of the matter is, the people who sign your paycheck don’t give a flying fuck about how you did it. They only care that you finished the job.\nDon’t let yourself get distracted by all the vanity. If you can get shit done and can find someone who will pay you for it, you’re at the highest level of programming as far as I’m concerned.",
    "author": "Håkon Hapnes Strand, Data Scientist"
  }, {
    "content": "Write programs whose sole purpose is to have a conversation with the user (often beginning with asking for the user’s name, so that the program can address them by name)\n•Use “my” as a prefix for their variable names (“myString”, “myClass”, “myArray”)\n•Write comments that explain every line of code, even the ones that are 100% self-evident or self-documented because of the name of the variable or method. \n•// this variable is a string that holds the name\n•String name;\n•Overuse brevity when their code should be more explicit or readable (making one line of code do too much), or not using enough brevity when they should optimize their steps (inefficient execution)\n•Cargo-culted snippets that were copy-pasted from StackOverflow or other Internet sources. These are recognizable because they have methods or variables that are never used, are named strangely, or execute additional instructions unnecessarily.\n•Use both spaces and tabs as if they were raised in a barn by wolves after falling off a turnip truck.",
    "author": "Aaron Hill, works at Cornell University"
  }]
}
